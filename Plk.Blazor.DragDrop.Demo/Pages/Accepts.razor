@page "/accepts"
@using Plk.Blazor.DragDrop.Demo.Components
@using Plk.Blazor.DragDrop.Demo.Data
@using Plk.Blazor.DragDrop.DropActions

<div class="bg-success">You can accept or deny items.</div>

<hr />

<div class="bg-light">First Dropzone:</div>


    <Dropzone Items="MyFirstList">
        <DropActions>
            <MoveDropAction TItem="TodoItem" />
        </DropActions>
        <ChildContent>
            <div style="border: 2px solid blue">
                @context.Titel
            </div>
        </ChildContent>
    </Dropzone>


<hr />

<div class="bg-light">Second Dropzone: (only accepts items containing the word 'fun')</div>


    <Dropzone Items="MySecondList" Accepts='(d, t)=>d.Titel.Contains("fun")' TItem="TodoItem" OnItemDropRejected="@((i)=>lastdropped = i)">
        <DropActions>
            <MoveDropAction TItem="TodoItem" />
        </DropActions>
        <ChildContent>
            <div style="border: 2px solid black">
                @context.Titel
            </div>
        </ChildContent>
    </Dropzone>

<hr />

@if(lastdropped != null)
{
    <div class="bg-warning">No place for you here:  @lastdropped?.Titel </div>
}

@code {

    private TodoItem lastdropped { get; set; }

    public List<TodoItem> MyFirstList = new List<TodoItem>()
{
            new TodoItem(){Titel = "Item 1 - boring"},
            new TodoItem(){Titel = "Item 2 - angry"},
            new TodoItem(){Titel = "Item 3 - fun"},
            new TodoItem(){Titel = "Item 4 - more fun"},
            new TodoItem(){Titel = "Item 5 - great"},
    };

    public List<TodoItem> MySecondList = new List<TodoItem>()
{
            new TodoItem(){Titel = "Item 6 - the real fun"},
    };

}
